"-------------------------------------------------------------------------------
" 移動設定 Move
"-------------------------------------------------------------------------------
" カーソルを表示行で移動
nnoremap h <Left>
nnoremap j gjzz
nnoremap k gkzz
nnoremap l <Right>
nnoremap <Down> gj
nnoremap <Up>   gk

" insert mode での移動
inoremap <C-h> <Left>
inoremap <C-l> <Right>
inoremap <C-e> <END>
inoremap <C-a> <HOME>

"フレームサイズを怠惰に変更する
map <kPlus> <C-W>+
map <kMinus> <C-W>-

" 前回終了したカーソル行に移動
autocmd BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal g`\"" | endif

" QuickFixの移動
nnoremap <C-p> :cp <CR>
nnoremap <C-n> :cn <CR>

" LocationListの移動
nnoremap <C-k> :lp <CR>
nnoremap <C-j> :lne <CR>

" マッチ文字列が画面の真ん中にくるようにする
nmap n nzz
nmap N Nzz
nmap * *zz
nmap # #zz
nmap g* g*zz
nmap g# g#zz

" 矩形選択で自由に移動する
set virtualedit+=block

" git-diff-aware version of gf commands.
" http://labs.timedia.co.jp/2011/04/git-diff-aware-gf-commands-for-vim.html
nnoremap <expr> gf         <SID>do_git_diff_aware_gf('gf')
nnoremap <expr> gF         <SID>do_git_diff_aware_gf('gF')
nnoremap <expr> <C-w>f     <SID>do_git_diff_aware_gf('<C-w>f')
nnoremap <expr> <C-w><C-f> <SID>do_git_diff_aware_gf('<C-w><C-f>')
nnoremap <expr> <C-w>F     <SID>do_git_diff_aware_gf('<C-w>F')
nnoremap <expr> <C-w>gf    <SID>do_git_diff_aware_gf('<C-w>gf')
nnoremap <expr> <C-w>gF    <SID>do_git_diff_aware_gf('<C-w>gF')

function! s:do_git_diff_aware_gf(command)
  let target_path = expand('<cfile>')
  if target_path =~# '^[ab]/'  " with a peculiar prefix of git-diff(1)?
    if filereadable(target_path) || isdirectory(target_path)
      return a:command
    else
      " BUGS: Side effect - Cursor position is changed.
      let [_, c] = searchpos('\f\+', 'cenW')
      return c . '|' . 'v' . (len(target_path) - 2 - 1) . 'h' . a:command
    endif
  else
    return a:command
  endif
endfunction

